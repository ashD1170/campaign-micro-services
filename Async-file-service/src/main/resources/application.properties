server.port=8081
spring.application.name=Async-file-service

# AWS Config
aws.region=ap-south-1
aws.s3.bucket-name=campaign-file-uploads-ashish

# Kafka Consumer Config
spring.kafka.consumer.group-id=file-upload-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Use ErrorHandlingDeserializer to handle deserialization errors gracefully
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.ErrorHandlingDeserializer

# Delegate to JsonDeserializer for actual JSON parsing
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer

# Specify the target class for deserialization
spring.kafka.consumer.properties.spring.json.value.default.type=com.ashish.in.Async_file_service.DTO.FileUploadEvent

# Allow deserialization for your package
spring.kafka.consumer.properties.spring.json.trusted.packages=com.ashish.in.campaign_management_service.Dto

#It will not try to map the JsonObject with producer class
spring.kafka.consumer.properties.spring.json.use.type.headers=false


# Kafka topic
kafka.topic.file-upload=file-upload-topic

spring.data.mongodb.uri=mongodb://localhost:27017/campaign-db

file.upload.batch-size=500
